diff --git a/modules/media_wysiwyg/js/media_wysiwyg.filter.js b/modules/media_wysiwyg/js/media_wysiwyg.filter.js
index 5ac10ec..5419551 100644
--- a/modules/media_wysiwyg/js/media_wysiwyg.filter.js
+++ b/modules/media_wysiwyg/js/media_wysiwyg.filter.js
@@ -68,29 +68,42 @@
      */
     replacePlaceholderWithToken: function(content) {
       Drupal.media.filter.ensure_tagmap();
-
-      // Rewrite the tagmap in case any of the macros have changed.
-      Drupal.settings.tagmap = {};
-
-      // Wrap the content to be able to use replaceWith() and html().
-      content = $('<div>').append(content);
-      var media = $('.media-element', content);
-
-      if (media.length) {
-        // Replace all media elements with their respective macros.
-        media.replaceWith(function() {
-          var el = $(this),
-            macro = Drupal.media.filter.create_macro(el);
-
-          // Store the markup for more efficient rendering later.
-          // @see replaceTokenWidthPlaceholder()
-          Drupal.settings.tagmap[macro] = Drupal.media.filter.outerHTML(el);
-
-          return macro;
+      // Locate and process all the media placeholders in the WYSIWYG content.
+      var contentElements = $('<div>' + content + '</div>');  // TODO: once baseline jQuery is 1.8+, switch to using $.parseHTML(content)
+      var mediaElements = contentElements.find('.media-element');
+      if (mediaElements) {
+        $(mediaElements).each(function (i) {
+          // Attempt to derive a JSON macro representation of the media placeholder.
+          // Note: Drupal 7 ships with JQuery 1.4.4, which allows $(this).attr('outerHTML') to retrieve the eement's HTML,
+          // but many sites use JQuery update to increate this to 1.6+, which insists on $(this).prop('outerHTML).
+          // Until the minimum jQuery is >= 1.6, we need to do this the old-school way.
+          // See http://stackoverflow.com/questions/2419749/get-selected-elements-outer-html
+          var markup = $(this).get(0).outerHTML;
+          if (markup === undefined) {
+            // Browser does not support outerHTML DOM property.  Use the more expensive clone method instead.
+            markup = $(this).clone().wrap('<div>').parent().html();
+          }
+          var macro = Drupal.media.filter.create_macro($(markup));
+          if (macro) {
+            // Replace the placeholder with the macro in the parsed content.
+            // (Can't just replace the string section, because the outerHTML may be subtly different,
+            // depending on the browser. Parsing tends to convert <img/> to <img>, for instance.)
+            Drupal.settings.tagmap[macro] = markup;
+            $(this).replaceWith(macro);
+          }
+        });
+        content = '';
+        contentElements.each(function(){
+          if ($(this)[0].localName == 'script') {
+            content += $(this)[0].outerHTML;
+          }
+          else {
+            content += $(this)[0].innerHTML;
+          }
         });
       }
 
-      return content.html();
+      return content;
     },
 
     /**
