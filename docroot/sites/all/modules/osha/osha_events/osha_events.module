<?php
/**
 * @file
 * Code for the OSHA Events feature.
 */

include_once 'osha_events.features.inc';

/**
 * Implements hook_form_alter().
 */

function osha_events_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'events_node_form') {
    $form['#validate'][] = 'osha_events_form_validate';
  }
}

/**
 * Implements hook_form_views_exposed_form_alter().
 */
function osha_events_form_views_exposed_form_alter(&$form, &$form_state) {
  // CW-1085 Default date now for start date in views filter.
  if ($form['#id'] == 'views-exposed-form-events-index-page') {
    $form['field_start_date_value']['#date_format'] = 'd/m/Y';
    $form['field_start_date_value2']['#date_format'] = 'd/m/Y';
    if (empty($form_state['input'])) {
      $date = new DateTime('now');
      $form_state['input']['field_start_date_value']['date'] = $date->format('d/m/Y');
      // Set the get value to prevent a bug in pager
      // See ticket CW-1438 and Drupal bug: www.drupal.org/node/1415306
      $_GET['field_start_date_value']['date'] = $date->format('d/m/Y');
    }
  }
}

/**
 * Validation callback.
 */
function osha_events_form_validate($form, &$form_state) {
  // When publishing an event, some fields are required.
  $values = $form_state['values'];
  $node = $form_state['node'];
  if ($values['status'] == 1) {
    if (FALSE && empty($values['body'][$node->language]['0']['value'])) {
      form_set_error('body', t('You have to add a Description.'));
    }
    if (empty($values['field_start_date']['und']['0']['value'])) {
      form_set_error('field_start_date', t('You have to add a Start Date.'));
    }
    if (empty($values['field_start_date']['und']['0']['value2'])) {
      form_set_error('field_start_date', t('You have to add an End Date .'));
    }
    if (FALSE && empty($values['field_website_of_event']['und']['0']['title'])) {
      form_set_error('field_website_of_event', t('You have to add a Web site title.'));
    }
    if (FALSE && empty($values['field_website_of_event']['und']['0']['url'])) {
      form_set_error('field_website_of_event', t('You have to add a Web site url.'));
    }
    if (empty($values['field_organization']['und']['0']['value'])) {
      form_set_error('field_organization', t('You have to add an Organization.'));
    }
    if (empty($values['field_country_code']['und']['0']['value'])) {
      form_set_error('field_country_code', t('You have to add a Country Code.'));
    }
    if (empty($values['field_city']['und']['0']['value'])) {
      form_set_error('field_city', t('You have to add a City.'));
    }
    if (empty($values['field_tags']['und']['0']['tid'])) {
      form_set_error('field_tags', t('You have to add a Category.'));
    }
  }
}


/**
 * Altering Date Popup to remove labels and description for specific field
 */
function osha_events_date_popup_process_alter(&$element, &$form_state, $context) {
  if ($element['#name'] == 'field_start_date_value' || $element['#name'] == 'field_start_date_value2') {
    //unset($element['date']['#description']);
    unset($element['date']['#title']);
  }
}

/**
 * Implements hook_osha_tmgmt_i18n_string_list().
 */
function osha_events_osha_tmgmt_i18n_string_list() {
  module_load_include('inc', 'osha_events', 'osha_events.translations');
  return osha_events_get_translatable_strings();
}
