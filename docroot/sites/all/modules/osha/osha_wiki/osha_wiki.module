<?php
/**
 * @file
 * Code for the osha_wiki feature.
 */

include_once 'osha_wiki.features.inc';

/**
 * Implements hook_feeds_after_parse().
 */
function osha_wiki_feeds_after_parse(FeedsSource $source, FeedsParserResult $result) {
  // Decode description field.
  foreach ($result->items as &$item) {
    $item['description'] = html_entity_decode($item['description']);
  }
}

/**
 * Implements hook_feeds_presave().
 */
function osha_wiki_feeds_presave(FeedsSource $source, $entity, $item) {
  // Get first content section from content table.
//  $first_step = explode('<span class="toctext">', $item['description']);
//  $second_step = explode("</span>", $first_step[1]);
//  $first_chapter = $second_step[0];
//
//  // Html title for the first section of the content.
//  $title_span = '<span class="mw-headline" id="' . str_replace(' ', '_', $first_chapter) . '">';
//  // Get the content between first section and next section (h2).
//  $first_step = explode($title_span, $item['description']);
//  $second_step = explode("</h2>", $first_step[1]);
//  $third_step = explode("<h2>", $second_step[1]);
//  $summary = $third_step[0];
  $summary = $item['description'];

  // Set the entity language as defined in importer form.
  $importer_id = $source->importer()->id;
  $lang = variable_get($importer_id, 'en');
  $entity->language = $lang;

  // Attach the entity summary as first section content.
  $entity->body[$entity->language][0] = array(
    'value' => $summary,
    'format' => 'full_html',
  );
}

/**
 * Define custom view mode for entities - wiki
 */
function osha_wiki_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['osha_wiki'] = array(
    'label' => t('OSH Wiki'),
    'custom settings' => TRUE
  );
}

/**
 * Implements hook_form_alter().
 */
function osha_wiki_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'feeds_import_form' || $form_id == 'FeedsCrawler_feeds_form') {
    array_unshift($form['#submit'], 'osha_wiki_feeds_importer_form_submit');
    if ($form_id == 'feeds_import_form') {
      $form_data = &$form['feeds']['FeedsCrawler'];
      $importer_id = $form['#importer_id'];
    }
    else {
      $form_data = &$form['crawler'];
      $importer_id = arg(3);
    }
    $options = array_map(
      function ($language) {
        return $language->name;
      },
      language_list()
    );
    $form_data['osh_wiki_importer_language'] = array(
      '#title' => 'Language',
      '#type' => 'select',
      '#options' => $options,
      '#default_value' => variable_get($importer_id, 'en'),
    );
  }
}

/**
 * Submit callback for importer form.
 */
function osha_wiki_feeds_importer_form_submit($form, &$form_state) {
  if ($form['#form_id'] == 'feeds_import_form') {
    $lang = $form_state['values']['feeds']['FeedsCrawler']['osh_wiki_importer_language'];
    $importer_id = $form['#importer_id'];
  }
  else {
    $lang = $form_state['values']['crawler']['osh_wiki_importer_language'];
    $importer_id = arg(3);
  }
  variable_set($importer_id, $lang);
}


/**
 * Implements hook_feeds_importer_default().
 */
function osha_wiki_feeds_importer_default() {
  $export = array();
  $config = osha_wiki_read_config();
  foreach ($config as $row) {
    $export[$row->feed_id] = osha_wiki_feeds_importer_create(
      $row->feed_id, $row->url, $row->language, $row->name
    );
  };
  return $export;
}


function osha_wiki_read_config() {
  $config_file = DRUPAL_ROOT . '/../conf/wiki.json';
  if (!is_readable($config_file)) {
    drupal_set_message("Cannot read config file! ($config_file). Please configure your project correctly", 'error');
  }
  return json_decode(file_get_contents($config_file));
}

/**
 * Create a Wiki page feeds importer configured object.
 *
 * @param string $feed_id
 *   Feed unique machine name
 * @param string $url
 *   Feed URL (can contain $index for pagination offset)
 * @param string $language
 *   Target nodes language
 * @param string $name
 *   Feed human readable name
 *
 * @return object
 *   Feed object
 */
function osha_wiki_feeds_importer_create($feed_id, $url = NULL, $language = 'en', $name = NULL) {
  $feeds_importer = new stdClass();
  $feeds_importer->disabled = FALSE; /* Edit this to true to make a default feeds_importer disabled initially */
  $feeds_importer->api_version = 1;
  $feeds_importer->id = $feed_id;
  $feeds_importer->config = array(
    'name' => $name,
    'description' => '',
    'fetcher' => array(
      'plugin_key' => 'FeedsCrawler',
      'config' => array(
        'auto_detect_feeds' => 0,
        'use_pubsubhubbub' => 0,
        'designated_hub' => '',
        'request_timeout' => '',
        'source' => $url,
        'crawler' => array(
          'num_pages' => '0',
          'delay' => '1',
          'first_run' => '0',
          'auto' => '0',
          'xpath' => '',
          'url' => array(
            'url_pattern' => $url,
            'initial' => '0',
            'increment' => '5',
          ),
          'osh_wiki_importer_language' => $language,
        ),
        'crawled' => FALSE,
      ),
    ),
    'parser' => array(
      'plugin_key' => 'FeedsSyndicationParser',
      'config' => array(),
    ),
    'processor' => array(
      'plugin_key' => 'FeedsNodeProcessor',
      'config' => array(
        'expire' => '-1',
        'author' => '1',
        'authorize' => 1,
        'mappings' => array(
          0 => array(
            'source' => 'title',
            'target' => 'title',
            'unique' => FALSE,
          ),
          1 => array(
            'source' => 'url',
            'target' => 'field_wiki_page_url:url',
            'unique' => FALSE,
          ),
          2 => array(
            'source' => 'guid',
            'target' => 'guid',
            'unique' => 1,
          ),
          3 => array(
            'source' => 'timestamp',
            'target' => 'created',
            'unique' => FALSE,
          ),
          4 => array(
            'source' => 'description',
            'target' => 'body',
            'unique' => FALSE,
          ),
        ),
        'update_existing' => '2',
        'input_format' => 'full_html',
        'skip_hash_check' => 0,
        'bundle' => 'wiki_page',
      ),
    ),
    'content_type' => '',
    'update' => 0,
    'import_period' => '1800',
    'expire_period' => 3600,
    'import_on_create' => 0,
    'process_in_background' => 1,
  );
  return $feeds_importer;
}

/* *
 * Implements hook_block_list_alter() to hide the related wiki under publication
 * when manual wiki articles have been linked to the current publication
 */

function osha_wiki_block_list_alter(&$blocks) {
    $node = menu_get_object();
    if ($node && !empty($node->field_related_oshwiki_articles[LANGUAGE_NONE][0])) {
        foreach ($blocks as $block_id => $block) {
            if ($block->delta == 'related_content-block_5') {
                unset ($blocks[$block_id]);
                break;
            }
        }
    }
}