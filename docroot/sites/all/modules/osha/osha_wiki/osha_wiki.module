<?php
/**
 * @file
 * Code for the osha_wiki feature.
 */

include_once 'osha_wiki.features.inc';

/**
 * Implements hook_feeds_after_parse().
 */
function osha_wiki_feeds_after_parse(FeedsSource $source, FeedsParserResult $result) {
  // Decode description field.
  foreach ($result->items as &$item) {
    $item['description'] = html_entity_decode($item['description']);
  }
}

/**
 * Implements hook_feeds_presave().
 */
function osha_wiki_feeds_presave(FeedsSource $source, $entity, $item) {
  // Get first content section from content table.
//  $first_step = explode('<span class="toctext">', $item['description']);
//  $second_step = explode("</span>", $first_step[1]);
//  $first_chapter = $second_step[0];
//
//  // Html title for the first section of the content.
//  $title_span = '<span class="mw-headline" id="' . str_replace(' ', '_', $first_chapter) . '">';
//  // Get the content between first section and next section (h2).
//  $first_step = explode($title_span, $item['description']);
//  $second_step = explode("</h2>", $first_step[1]);
//  $third_step = explode("<h2>", $second_step[1]);
//  $summary = $third_step[0];
  $summary = $item['description'];

  // Set the entity language as defined in importer form.
  $importer_id = $source->importer()->id;
  $lang = variable_get(
    'osh_importer_language[' . $importer_id . ']', 'en');
  $entity->language = $lang;

  // Attach the entity summary as first section content.
  $entity->body[$entity->language][0]['summary'] = $summary;
}

/**
 * Implements hook_form_alter().
 */
function osha_wiki_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'feeds_import_form' || $form_id == 'FeedsCrawler_feeds_form') {
    array_unshift($form['#submit'], 'osha_wiki_feeds_importer_form_submit');
    $options = array();
    foreach (language_list() as $lang => $language) {
      $options[$lang] = $language->name;
    }
    if ($form_id == 'feeds_import_form') {
      $form_data = &$form['feeds']['FeedsCrawler'];
      $importer_id = $form['#importer_id'];
    }
    else {
      $form_data = &$form['crawler'];
      $importer_id = arg(3);
    }
    $form_data['osh_importer_language'] = array(
      '#title' => 'Language',
      '#type' => 'select',
      '#options' => $options,
      '#default_value' => variable_get(
        'osh_importer_language[' . $importer_id . ']', 'en'),
    );
  }
}

/**
 * Submit callback for importer form.
 */
function osha_wiki_feeds_importer_form_submit($form, &$form_state) {
  if ($form['#form_id'] == 'feeds_import_form') {
    $lang = $form_state['values']['feeds']['FeedsCrawler']['osh_importer_language'];
    $importer_id = $form['#importer_id'];
  }
  else {
    $lang = $form_state['values']['crawler']['osh_importer_language'];
    $importer_id = arg(3);
  }
  variable_set('osh_importer_language[' . $importer_id . ']', $lang);
}

function osha_wiki_feeds_create_importer($language = 'en', $name = 'osh_wiki_importer', $url = NULL) {
  if (!$url) {
    $url = 'http://oshwiki-staging.mainstrat.com/wiki/Special:Ask/-5B-5B:+-5D-5D-20-5B-5BLanguage-20code::fr-5D-5D/-3F-23-2D/format=feed/sort=Modification-20date/order=descending/searchlabel=-20Atom-20feed-20example/type=atom/title=Semantic-20MediaWiki/description=Latest-20news-20from-20semantic-2Dmediawiki.org/page=full/offset=0/limit=5';
  }
  $url_pattern = 'http://oshwiki-staging.mainstrat.com/wiki/Special:Ask/-5B-5B:+-5D-5D-20-5B-5BLanguage-20code::fr-5D-5D/-3F-23-2D/format=feed/sort=Modification-20date/order=descending/searchlabel=-20Atom-20feed-20example/type=atom/title=Semantic-20MediaWiki/description=Latest-20news-20from-20semantic-2Dmediawiki.org/page=full/offset=$index/limit=5';
  $feeds_importer = new stdClass();
  $feeds_importer->disabled = FALSE; /* Edit this to true to make a default feeds_importer disabled initially */
  $feeds_importer->api_version = 1;
  $feeds_importer->id = 'wiki';
  $feeds_importer->config = array(
    'name' => 'Wiki',
    'description' => '',
    'fetcher' => array(
      'plugin_key' => 'FeedsCrawler',
      'config' => array(
        'auto_detect_feeds' => 0,
        'use_pubsubhubbub' => 0,
        'designated_hub' => '',
        'request_timeout' => '',
        'source' => $url,
        'crawler' => array(
          'num_pages' => '3',
          'delay' => '1',
          'first_run' => '0',
          'auto' => '0',
          'xpath' => '',
          'url' => array(
            'url_pattern' => $url_pattern,
            'initial' => '0',
            'increment' => '5',
          ),
          'osh_importer_language' => $language,
        ),
        'crawled' => FALSE,
      ),
    ),
    'parser' => array(
      'plugin_key' => 'FeedsSyndicationParser',
      'config' => array(),
    ),
    'processor' => array(
      'plugin_key' => 'FeedsNodeProcessor',
      'config' => array(
        'expire' => '-1',
        'author' => '1',
        'authorize' => 1,
        'mappings' => array(
          0 => array(
            'source' => 'title',
            'target' => 'title',
            'unique' => FALSE,
          ),
          1 => array(
            'source' => 'url',
            'target' => 'field_wiki_page_url:url',
            'unique' => FALSE,
          ),
          2 => array(
            'source' => 'guid',
            'target' => 'guid',
            'unique' => 1,
          ),
          3 => array(
            'source' => 'timestamp',
            'target' => 'created',
            'unique' => FALSE,
          ),
          4 => array(
            'source' => 'description',
            'target' => 'body',
            'unique' => FALSE,
          ),
        ),
        'update_existing' => '2',
        'input_format' => 'full_html',
        'skip_hash_check' => 0,
        'bundle' => 'wiki_page',
      ),
    ),
    'content_type' => '',
    'update' => 0,
    'import_period' => '1800',
    'expire_period' => 3600,
    'import_on_create' => 1,
    'process_in_background' => 1,
  );

  return $feeds_importer;
}
