<?php
/**
 * @file
 * Code for the Blog feature.
 */

include_once 'osha_blog.features.inc';

define('OSHA_BLOG_CONTENT_TYPE_BLOG', 'blog');

/**
 * Implements hook_post_features_enable_feature().
 *
 * {@inheritdoc}
 */
function osha_blog_post_features_enable_feature($component) {
  // After the field_instance ...
  if ($component == 'variable') {
    menu_rebuild();
    drupal_static_reset();
    if ($role = user_role_load_by_name('administrator')) {
      $permissions = array(
        'create blog content',
        'edit own blog content',
        'edit any blog content',
        'delete own blog content',
        'delete any blog content',
      );
      user_role_grant_permissions($role->rid, $permissions);
    }
  }
}

/**
 * Implements hook_post_features_revert
 * @param $component
 */
function osha_blog_post_features_revert($component){
  //Add recaptcha validation for blog comment form
  $query = db_query("SELECT * FROM captcha_points WHERE form_id = 'comment_node_blog_form' ")->fetchField();

  $data = array(
    'form_id' => 'comment_node_blog_form',
    'module' => 'recaptcha',
    'captcha_type' => 'reCAPTCHA',
  );

  if($query)
    drupal_write_record('captcha_points', $data, 'form_id');
  else
    drupal_write_record('captcha_points', $data);
}

/**
 * Implements hook_views_pre_render
 * @param $view
 */
function osha_blog_views_pre_render(&$view) {
  if ($view->name == 'blog' && $view->current_display == 'block_2') {
    drupal_add_js(drupal_get_path('module', 'osha_blog') .'/includes/js/collapse_block.js');

    $month = '';
    $current_year = date('Y', time());

    foreach($view->result as $key => $result){
      $row_month = date('F', strtotime($result->field_field_publication_date[0]['raw']['value']));
      $row_month_raw = date('m', strtotime($result->field_field_publication_date[0]['raw']['value']));
      $row_year = date('Y', strtotime($result->field_field_publication_date_1[0]['raw']['value']));

      //remove current year
      if($current_year == $row_year){
        unset($result->field_field_publication_date_1[0]);
      }

      //remove from display if publication date is in the same month
      if($month == $row_month){
        unset($view->result[$key]);
        continue;
      }

      $month = $row_month;
      $result->field_field_publication_date[0]['rendered']['#markup'] = "<a href='/blog/{$row_year}-{$row_month_raw}'>".$row_month."</a>";
    }
  }

  if ($view->name == 'blog' && $view->current_display == 'page_1') {
    $title = isset($view->args[0])? get_view_title($view->args[0]): '';
    //set view title
    $view->build_info['title'] = $title;
    //set view breadcrumb
    drupal_set_breadcrumb(
      array(
        l(t('Home'), NULL),
        l('Blog', 'articles/blog'),
        $title,
      )
    );
  }
}

/**
 * Implements hook_node_view_alter
 * Set custom breadcrumb
 * @param $build
 */
function osha_blog_node_view_alter(&$build){
  $breadcrumb = array();
  $node = $build['#node'];
  if ($build['#view_mode'] == 'full' && $node->type == 'blog'){
    $date = strtotime($node->field_publication_date[LANGUAGE_NONE][0]['value']);
    $breadcrumb[] = l(t('Home'), NULL);
    $breadcrumb[] = l('Blog', 'articles/blog');
    $breadcrumb[] = l(date('F Y', $date), 'blog/'.date('Y-m', $date));
    $breadcrumb[] = drupal_get_title();
    drupal_set_breadcrumb($breadcrumb);
  }
}

/**
 * Implements hook_node_view
 * @param $node
 * @param $view_mode
 * @param $langcode
 */
function osha_blog_node_view($node, $view_mode, $langcode){
  //hide title for intro article Blog
  if($node->type == 'article' && $node->path['alias'] == 'articles/blog')
    hide($node->content['title_field']);
}

/**
 * Display custom title for monthly views
 * @return bool|null|string
 */
function get_view_title($title){
  if(preg_match('/([\d]{4}\-[\d]{2})/', $title)){
    $title = date('F Y', mktime(0, 0, 0, substr($title,5,2), 1, substr($title, 0, 4)));
    $title = t('@data posts', array('@data' => $title));
  }
  return $title;
}
