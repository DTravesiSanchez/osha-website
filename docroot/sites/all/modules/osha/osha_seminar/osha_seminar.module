<?php
/**
 * @file
 * Code for the Seminar feature.
 */

include_once 'osha_seminar.features.inc';

define('OSHA_SEMINAR_CONTENT_TYPE_SEMINAR', 'seminar');

/**
 * Implements hook_post_features_enable_feature().
 *
 * {@inheritdoc}
 */
function osha_seminar_post_features_enable_feature($component) {
  // After the field_instance ...
  if ($component == 'variable') {
    menu_rebuild();
    drupal_static_reset();
    if ($role = user_role_load_by_name('administrator')) {
      $permissions = array(
        'create seminar content',
        'edit own seminar content',
        'edit any seminar content',
        'delete own seminar content',
        'delete any seminar content',
      );
      user_role_grant_permissions($role->rid, $permissions);
    }
  }
}


/**
 * Implements Elysia hook_cronapi().
 */
function osha_seminar_cronapi() {
  return array('osha_seminar_cron' => array(
    'description' => 'Seminar pdf pages count update',
    'rule' => '*/30 * * * *', // Every 15 minutes
  ));
}

function osha_seminar_cron() {
  $result = views_get_view_result('seminar_pages_count');
  $diff = variable_get('node_changed_diff', 0);
  foreach ($result as $row) {
    $changed = date('Y-m-d H:i:s', $row->node_changed + $diff);
    if ($changed > $row->field_field_pages_count_updated[0]['raw']['value']) {
      $uri = $row->field_field_report[0]['raw']['uri'];
      $path = drupal_realpath($uri);
      $pages_count = pdf_to_image_count_pages($path);
      $node = node_load($row->nid);
      $node->field_pages_count[LANGUAGE_NONE][0]['value'] = $pages_count;
      $node->field_pages_count_updated[LANGUAGE_NONE][0]['timezone'] = 'Europe/Madrid';
      $node->field_pages_count_updated[LANGUAGE_NONE][0]['timezone_db'] = 'Europe/Madrid';
      $node->field_pages_count_updated[LANGUAGE_NONE][0]['date_type'] = 'datetime';
      $node->field_pages_count_updated[LANGUAGE_NONE][0]['value'] = date('Y-m-d H:i:s');
      node_save($node);
    }
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function osha_seminar_field_formatter_info() {
  $info = array(
    'field_related_resources' => array(
      'label' => 'Seminar related resources',
      'field types' => array('file'),
      'description' => 'Displays default icon per file type and file description.',
    ),
    'field_pages_count' => array(
      'label' => 'Seminar number of pages',
      'field types' => array('number_integer', 'number_decimal', 'number_float'),
      'settings' => array(
        'prefix' => '',
        'suffix' => '',
        'tag' => 'div',
        'class' => '',
      ),
    ),
  );
  return $info;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function osha_seminar_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $elements = array();
  if ($display['type'] == 'field_pages_count') {
    $elements['prefix'] = array(
      '#type' => 'textfield',
      '#title' => t('field prefix'),
      '#default_value' => $settings['prefix'],
    );
    $elements['suffix'] = array(
      '#type' => 'textfield',
      '#title' => t('field suffix'),
      '#default_value' => $settings['suffix'],
    );
    $elements['tag'] = array(
      '#type' => 'textfield',
      '#title' => t('tag'),
      '#default_value' => $settings['tag'],
    );
    $elements['class'] = array(
      '#type' => 'textfield',
      '#title' => t('tag class'),
      '#default_value' => $settings['class'],
    );
  }

  return $elements;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function osha_seminar_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $output = array();
  if ($display['type'] == 'field_pages_count') {
    foreach($settings as $key => $value) {
      $output[] = t('@key: @value', array('@key' => ucfirst($key), '@value' => $value));
    }
  }
  return implode('<br>', $output);
}

/**
 * Implements hook_theme().
 */
function osha_seminar_theme() {
  return array(
    'osha_seminar_file_related_resources_format' => array(
      'variables' => array('file' => NULL, 'delta' => NULL),
    ),
    'osha_seminar_pages_count_format' => array(
      'variables' => array('item' => NULL, 'settings' => NULL, 'delta' => NULL),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function osha_seminar_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'field_pages_count':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme' => 'osha_seminar_pages_count_format',
          '#item' => $item,
          '#settings' => $display['settings'],
          '#delta' => $delta,
        );
      }
      break;
    case 'field_related_resources':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme' => 'osha_seminar_file_related_resources_format',
          '#file' => $item,
          '#delta' => $delta,
        );
      }
      break;
  }
  return $element;
}

/*
 * Formats the related resources (attached files) as icon and description/filename
 */
function theme_osha_seminar_pages_count_format($element) {
  $output = [];
  $value = $element['item']['value'];
  if (!$value) {
    return '';
  }
  $tag = 'div';
  if ($element['settings']['tag']) {
    $tag = $element['settings']['tag'];
  }
  if ($title = $element['settings']['prefix']) {
    $output []= '<' . $tag . ' class="' . $element['settings']['class'] . '">' . t($title) . ' ' . $element['item']['value'] . '</' . $tag . '>';
  }
  if ($title = $element['settings']['suffix']) {
    $output []= '<' . $tag . ' class="' . $element['settings']['class'] . '">' . $element['item']['value'] . ' ' . t($title) . '</' . $tag . '>';
  }
  return implode(' ', $output);
}

/*
 * Formats the related resources (attached files) as icon and description/filename
 */
function theme_osha_seminar_file_related_resources_format($element) {
  $file = (object) $element['file'];
  $icon_directory = drupal_get_path('theme', 'osha_frontend') . '/images/file_icons';

  $name = ($file->description != NULL) ? $file->description : $file->filename;
  $output = '<a href="' . file_create_url($file->uri) . '">';
  $output .= theme('file_icon', array('file' => $file, 'icon_directory' => $icon_directory));
  $output .= '<span>'.$name.'</span>';
  $size = @filesize($file->uri);
  if ($size) {
    $output .= '<span class="related_size">(' . format_size($size) . ')</span>';
  }
  $output .= '</a>';

  return $output;
}

/**
 * Implements hook_osha_tmgmt_i18n_string_list().
 */
function osha_seminar_osha_tmgmt_i18n_string_list() {
  module_load_include('inc', 'osha_seminar', 'osha_seminar.translations');
  return osha_seminar_get_translatable_strings();
}

/**
 * Altering Date Popup to remove labels and description for specific field
 */
function osha_seminar_date_popup_process_alter(&$element, &$form_state, $context) {
  if ($element['#name'] == 'field_seminar_start_date' || $element['#name'] == 'field_seminar_end_date') {
    unset($element['date']['#description']);
    unset($element['date']['#title']);
  }
}

/**
 * Implements hook_form_views_exposed_form_alter().
 */
function osha_seminar_form_views_exposed_form_alter(&$form, &$form_state) {
  // Format date for date widget.
  if ($form['#id'] == 'views-exposed-form-search-seminars-page') {
    $form['field_seminar_start_date']['#date_format'] = 'd/m/Y';
    $form['field_seminar_end_date']['#date_format'] = 'd/m/Y';
  }
}
