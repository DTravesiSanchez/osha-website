<?php

/**
 * Class WikiParseTest tests parsing of the wiki articles
 *
 * php ./scripts/run-tests.sh --verbose --color --class WikiParseTest
 */
class WikiParseTest extends DrupalUnitTestCase {

  /**
   * Test information.
   *
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'OSHA wiki parse testing',
      'description' => 'Tests the Wiki migration',
      'group' => 'OSHA',
    );
  }

  public function testWikiParse() {
    $osh_wiki_prefix = 'http://oshwiki.eu/wiki/';

    $source_file = drupal_get_path('module', 'osha_migration') . '/data/test/wiki5.json';
    $json = json_decode(file_get_contents($source_file), TRUE);
    $body = $json['parse']['wikitext']['*'];

    $patterns = array();
    $replacements = array();
    // Remove {{...}} [[Category]] <categorytree>..</categorytree>
    $patterns[0] = '/({{[^}]*}}\s*)*(\[\[[^\]]*\]\]\s*)*(<categorytree.*<\/categorytree>\s*)*/s';
    $replacements[0] = '';
    // Use limit because there are other [[wiki links]] in the text.
    $wiki_text = preg_replace($patterns, $replacements, $body, 1);

    $patterns[0] = '/(<ref[^<]*<\/ref>)/s';
    $replacements[0] = '';
    // Don't use limit for removal of <ref>..</ref>, there are many
    $wiki_text = preg_replace($patterns, $replacements, $wiki_text);

    // split in lines which will become <p>..</p>
    $lines = preg_split('/\n/', $wiki_text);

    // Replace wiki formatting with HTML.
    $patterns = array();
    // == Headings ==
    $patterns[0] = '/====\s*([^=]*)\s*====/';
    $patterns[1] = '/===\s*([^=]*)\s*===/';
    $patterns[2] = '/==\s*([^=]*)\s*==/';
    // Internal [[Wiki Links]]
    $patterns[3] = '/\[\[([^\]\|]*)\|*([^\]]*)\]\]/';
    // '''''bold+italic''''', '''bold''', ''italic''
    $patterns[4] = "/'''([^']*)'''/";
    $patterns[5] = "/''([^']*)''/";
    // Replace http links.
    $patterns[6] = "/\[([^\s\[]*)\s([^\[]*)\]/";

    $replacements = array();
    $replacements[0] = '<h4>${1}</h5>';
    $replacements[1] = '<h3>${1}</h4>';
    $replacements[2] = '<h2>${1}</h3>';
    $replacements[3] = '<a href="' . $osh_wiki_prefix . '${1}">${2}</a>';
    $replacements[4] = '<b>${1}</b>';
    $replacements[5] = '<i>${1}</i>';
    $replacements[6] = '<a href="${1}">${2}</a>';

    $summary = '';
    $char_count = 0;
    foreach ($lines as $line) {
      if ($length = strlen($line)) {
        $char_count += $length;
        $html_line = preg_replace($patterns, $replacements, $line);
        if ($html_line[0] != '<') {
          $html_line = '<p>' . $html_line . '</p>';
        }
        $summary .= $html_line . "\n";
        // Import hard-limit maximum char length.
        if ($char_count > 7000) {
          break;
        }
      }
    }
    // print $summary;
    // @todo: finish this test
  }

  public function testSummaryH1() {
    $source_file = drupal_get_path('module', 'osha_migration') . '/data/test/wiki6.json';
    $json = json_decode(file_get_contents($source_file), TRUE);
    $body = $json['parse']['wikitext']['*'];

    $summary = OshaMigrateSourceWiki::getWikiSummaryFromBody($body);
    $this->assertTrue(strpos($summary, '=Occupational safety and health legislative framework=') === FALSE, 'Looking for invalid =title= string');

  }

  /**
   * Test links inside wiki page body text
   */
  public function testLinks() {
    // TEST [[Category: OSH in general]]

    // https://oshwiki.eu/api.php?action=parse&format=json&prop=wikitext&page=EU_OSH_Strategic_framework
    $source_file = drupal_get_path('module', 'osha_migration') . '/data/test/wiki7-links1.json';
    $json = json_decode(file_get_contents($source_file), TRUE);
    $body = $json['parse']['wikitext']['*'];
    $summary = OshaMigrateSourceWiki::getWikiSummaryFromBody($body);
    $this->assertTrue(strpos($summary, '<a href="https://oshwiki.eu/wiki/Category: OSH in general">Category: OSH in general</a>') !== FALSE, 'Looking for valid wiki link ');

    $body = "{{LangTempl\n|lang=en\n}}\n{{Template:Translation\n|Page=EU Strategic Framework on safety and health at work  2014-2020\n|Lang=en\n}}\n{{Metadata\n|page_title=EU OSH Strategic framework\n}}\n{{Template:OSHA property\n|OSHA=(OSHA 00001A-02681B-04281C) Strategies\n}}\n{{Template:OSHA property\n|OSHA=(OSHA 00001A-06641B-06681C) European Commission\n}}\n{{Template:OSHA property\n|OSHA=(OSHA 00001A-06641B-07841C) European Union\n}}\n{{Template:OSHA property\n|OSHA=(OSHA 54161A-54201B-55921C-56361D) Policy makers\n}}\n<categorytree mode=pages style=\"float:right; clear:right; margin-left:1ex; border:1px solid gray; padding:0.7ex; background-color:white;\"> OSH in general</categorytree>\n";
    $body .= "[[Category: OSH in general]]\n[[Category: OSH in general]]";
    $body .= "\n\n==Introduction==\nTo achieve measurable improvements of the working conditions and a reduction of occupational accidents and diseases there should be a structured, strategic approach to occupational safety and health. \n\nThe previous European Strategy on Safety and Health at Work ran from 2007 \u2013 2012. Following an evaluation of the strategy commissioned by DG Employment and a public consultation procedure, and with the contributions of relevant stakeholders in this policy field, such as EU institutions, the social partners, the tripartite Advisory Committee on Health and Safety at Work and the [http://oshwiki.eu/wiki/Senior_Labour_Inspectors_Committee Senior Labour Inspectors\u2019 Committee (SLIC)],  the Commission published the new strategic framework 2014- 20. \n\n";
    $summary = OshaMigrateSourceWiki::getWikiSummaryFromBody($body);
    $items = array();
    preg_match_all('/Category\: OSH in general/', $summary, $items);
    $count = substr_count($summary, '<a href="https://oshwiki.eu/wiki/Category: OSH in general">Category: OSH in general</a>');
    $this->assertEqual(2, $count, 'Found two links');

    // TEST [[Category:Risk assessment]][[Category:E-tools]]
    // https://oshwiki.eu/api.php?action=parse&format=json&prop=wikitext&page=Designing_a_prevention_approach_suitable_for_small_enterprises
    $source_file = drupal_get_path('module', 'osha_migration') . '/data/test/wiki7-links2.json';
    $json = json_decode(file_get_contents($source_file), TRUE);
    $body = $json['parse']['wikitext']['*'];
    $summary = OshaMigrateSourceWiki::getWikiSummaryFromBody($body);
    $this->assertTrue(strpos($summary, '<a href="https://oshwiki.eu/wiki/Category:Risk assessment">Category:Risk assessment</a>') !== FALSE, 'Looking for valid Risk assessment link');
    $this->assertTrue(strpos($summary, '<a href="https://oshwiki.eu/wiki/Category:E-tools">Category:E-tools</a>') !== FALSE, 'Looking for valid E-tools link ');

    $body = "Suffix[[Category:E-tools]]";
    $summary = OshaMigrateSourceWiki::getWikiSummaryFromBody($body);
    $this->assertTrue(strpos($summary, '<a href="https://oshwiki.eu/wiki/Category:E-tools">Category:E-tools</a>') !== FALSE, 'Looking for valid E-tools link ');

    $body = "Suffix[[Category:Risk assessment]]";
    $summary = OshaMigrateSourceWiki::getWikiSummaryFromBody($body);
    $this->assertTrue(strpos($summary, '<a href="https://oshwiki.eu/wiki/Category:Risk assessment">Category:Risk assessment</a>') !== FALSE, 'Looking for valid E-tools link ');

    $body = "Suffix[[The economic dimension|considerable turnover]]";
    $summary = OshaMigrateSourceWiki::getWikiSummaryFromBody($body);
    $this->assertTrue(strpos($summary, '<a href="https://oshwiki.eu/wiki/The economic dimension">The economic dimension</a>') !== FALSE, 'Looking for valid <The economic dimension> link ');
  }
}
