<?php
/**
 * @file
 * Code for the Osha Content feature.
 */

include_once 'osha_content.features.inc';

/**
 * Implements hook_uuid_node_features_rebuild_alter().
 * Allows cleaning up nids from path_alias/source

function osha_content_uuid_node_features_rebuild_alter(&$node, $module) {
  // Workbench integration.
  if (!empty($node->workbench_moderation)) {
    if (!empty($node->workbench_moderation['published']['published'])) {
      $node->workbench_moderation_state_new = 'published';
    }
    unset($node->workbench_moderation);
  }
  unset($node->path['source']);
  unset($node->path['pid']);
}
*/

/**
 * Implements hook_osha_tmgmt_i18n_string_list().
 */
function osha_content_osha_tmgmt_i18n_string_list() {
  module_load_include('inc', 'osha_content', 'osha_content.translations');
  return osha_content_get_translatable_strings();
}

/**
 * Implementation of hook_node_view()
 *
 * Handle the case when the current language does not match content node language.
 */
function osha_content_node_view($node, $view_mode, $langcode) {
  global $language;

  $redirectId = variable_get('no_translation_nid', '7702');
  $exceptions = explode(PHP_EOL, variable_get('no_translation_exceptions'));

  array_walk($exceptions, function(&$value, $index){
    $value = trim($value);
  });

  if ($view_mode == 'full' && !in_array($node->nid, $exceptions)) {
    // if current language does not match content node language
    if (!empty($node->language) && $node->language != $language->language && $node->nid != $redirectId) {
      // lookup translations for current node
      if(!osha_content_has_translation($node->nid, $language)) {
        // redirect to a static page if there's not a translation in the currently active language
        $nodeLanguage = $language->language;
        if (!osha_content_has_translation($redirectId, $language)) {
          $nodeLanguage = 'en';
        }
        // Redirect to no translation available page
        drupal_goto(drupal_get_path_alias('node/'.$redirectId, $nodeLanguage),
          array(
            'query' => array('destination' => 'node/'.$node->nid),
            'language' => (object)array('language' => $nodeLanguage),
            'prefix' => $nodeLanguage.'/'
          )
        );
        //drupal_exit();
      }
    }
  }
}

/**
 * Check if a node has translation for a specified language
 */
function osha_content_has_translation($nid, $language) {
  $hasTranslation = FALSE;
  $node = node_load($nid);
  if(!$node) {
    return FALSE;
  }
  $translations = $node->translations->data;

  if(isset($translations[$language->language])) {
    $hasTranslation = TRUE;
  }
  return $hasTranslation;
}

/**
 * Implements hook_block_info().
 */
function osha_content_block_info() {
  $blocks = array();
  $blocks['no_translation'] = array(
    'info' => t('Translation not available'),
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function osha_content_block_configure($delta = '') {
  $form = array();

  switch($delta) {
    case 'no_translation' :
      // No translation node Id
      $form['no_translation_nid'] = array(
        '#type' => 'textfield',
        '#title' => t('No translation page nid'),
        '#default_value' => variable_get('no_translation_nid', '7702'),
      );
      $form['no_translation_exceptions'] = array(
        '#type' => 'textarea',
        '#title' => 'Exceptions - node IDs',
        '#description' => "IDs for which the rule doesn't applies. Enter one node ID per line.",
        '#default_value' => variable_get('no_translation_exceptions'),
      );
      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function osha_content_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'no_translation' :
      // Saving static page nid
      variable_set('no_translation_nid', $edit['no_translation_nid']);
      // Saving exceptions
      variable_set('no_translation_exceptions', $edit['no_translation_exceptions']);
      break;
  }
}

/**
 * Implements hook_block_view().
 */
function osha_content_block_view($delta = '') {
  $block = array();

  switch($delta) {
    case 'no_translation' :
      $block['content'] = drupal_get_form('osha_content_no_translation_form');
      break;
  }

  return $block;
}

function osha_content_no_translation_form($form, &$form_state){
  global $base_url;
  $form = $available = array();
  if (empty($_REQUEST['destination'])) {
    return;
  }
  $nid = str_replace('node/', '', $_REQUEST['destination']);
  if (!$node = node_load($nid)) {
    return;
  }

  // Get node translations
  $translations = array_keys($node->translations->data);
  sort($translations);
  // Get installed languages
  $installed = language_list();

  // Set an array with available translations and languages names
  foreach($translations as $lng) {
    if(isset($installed[$lng])) {
      $available[$lng] = $installed[$lng]->native;
    }
  }

  // Available translations
  $form['available_languages'] = array(
    '#type' => 'select',
    '#title' => t('See this page in other language'),
    '#empty_option' => t('Select translation'),
    '#options' => $available,
    '#attributes' => array(
      'class' => array('lang-dropdown-select-element'),
    ),
  );

  // Redirect node translations
  foreach($available as $lngCode => $lngValue) {
    $form[$lngCode] = array(
      '#type' => 'hidden',
      '#default_value' => '/'.$lngCode.'/'.drupal_get_path_alias('node/'.$nid),
    );
  }

  // URL of the page that has no translation
  $form['no_translation_request'] = array(
    '#type' => 'hidden',
    '#default_value' => $base_url.'/en/'.drupal_get_path_alias('node/'.$nid),
  );

  // Send mail button
  /*
  $form['no_translation_mail'] = array(
    '#type' => 'submit',
    '#prefix' => t('Help us: Tell us this page is not available in your language '),
    '#value' => 'Send',
  );
  */
  return $form;
}


/**
 * Form submit handler
 */
/*
function osha_content_no_translation_form_submit($form, &$form_state) {
  $site_email = variable_get('site_mail', ini_get('sendmail_from'));

  drupal_mail('osha_content', 'no_translation', $site_email, language_default(), $form_state);
  drupal_set_message(t('The mail has been submitted. Thank you!'));
  //redirect to home page
  drupal_goto('<front>');
}
*/

function osha_content_mail($key, &$message, $params) {
  switch($key) {
    case 'no_translation':
      $message['subject'] = t('No translation report');
      $message['body'][] = 'The following page does not have all the translations created: '.$params['values']['no_translation_request'];
      break;
  }
}

/**
 * Implementation of hook_webform_select_options_info().
 * See webform/webform.api.php for further information on this hook in the Webform API.
 */
function osha_content_webform_select_options_info() {
  $items = array();
  $items['available_languages'] = array(
    'title' => t('Languages'),
    'options callback' => 'osha_content_webform_pre_build_list_languages'
  );

  return $items;
}

/**
 * Build an options list (available languages) to be used with webforms select list
 */
function osha_content_webform_pre_build_list_languages() {
  $available_languages = array();
  $languages = osha_language_list(TRUE);
  foreach($languages as $key => $language) {
    $available_languages[$key] = $language->native;
  }

  return $available_languages;
}
