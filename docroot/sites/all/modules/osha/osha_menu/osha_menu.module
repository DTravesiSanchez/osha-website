<?php
/**
 * @file
 * Code for the Osha Menu feature.
 */

include_once 'osha_menu.features.inc';
define('OSHA_MENU_RENDER_IMG_VAR_NAME', 'render_menu_image');

/**
 * Implements hook_block_configure_alter().
 */
function osha_menu_menu_block_configure_form_alter(&$form, &$form_state) {
  $form['osha_menu_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('OSHA Menu Settings'),
  );
  $form['osha_menu_settings'][OSHA_MENU_RENDER_IMG_VAR_NAME] = array(
    '#type' => 'checkbox',
    '#title' => t('Render Menu Image.'),
    '#default_value' => variable_get('menu_block_' .
      $form_state['values']['delta'] . '_' . OSHA_MENU_RENDER_IMG_VAR_NAME, 0),
    '#description' => t('Render Image in menu'),
  );
}

/**
 * Implements hook_menu_block_block_save().
 */
function osha_menu_menu_block_block_save($delta, $form) {
  variable_set('menu_block_' . $delta . '_' . OSHA_MENU_RENDER_IMG_VAR_NAME,
    $form[OSHA_MENU_RENDER_IMG_VAR_NAME]);
}

/**
 * Implements hook_menu_block_block_delete().
 */
function osha_menu_menu_block_block_delete($form, $form_state) {
  $delta = $form_state['values']['delta'];
  variable_del('menu_block_' . $delta . '_' . OSHA_MENU_RENDER_IMG_VAR_NAME);
}

function osha_menu_post_features_revert($component) {
  if ($component == 'menu_links') {
    // Set menu images when installing menu.
    // Support for menuimage module and features.
    module_load_include('inc', 'file', 'file');
    $path = drupal_get_path('theme', 'osha_frontend');
    $images_dir = $path . '/images/menu';
    $temp = image_field_info();
    $types = $temp['image']['instance_settings']['file_extensions'];
    $image_dest_dir = 'public://menuimage';
    if (!is_dir($images_dir)) {
      drupal_set_message('Could not find the menu images source directory', 'warning');
      return;
    }
    if (!file_prepare_directory($image_dest_dir, FILE_CREATE_DIRECTORY)) {
      drupal_set_message("Could not create menuimage directory ($image_dest_dir)", 'warning');
      return;
    }
    $types = str_replace(' ', '|', $types);
    $images = file_scan_directory($images_dir, "/\.(" . $types . ")$/i");
    foreach ($images as $image_path => $image) {
      $img = fopen($image_path, 'r');
      file_save_data($img, $image_dest_dir . '/' . $image->filename, FILE_EXISTS_REPLACE);
    }

    // Add file usage for menus.
    $links = menu_load_links('main-menu');
    foreach ($links as  $link) {
      if (!empty($link['options']['content']['image'])) {
        $files = file_load_multiple(array(), array('uri' => $link['options']['content']['image']));
        if (!empty($files)) {
          $file = current($files);
          file_usage_add($file, 'menuimage', 'menu', $link['mlid']);
        }
      }
    }
  }
}
