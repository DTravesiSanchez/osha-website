<?php
/**
 * @file
 * Code for the osha_search feature.
 */

include_once 'osha_search.features.inc';


function osha_search_menu() {
  $items = array();
  $items['search-autocomplete/%'] = array(
    'page callback' => 'osha_search_autocomplete_callback',
    'access callback' => TRUE,
    'page arguments' => array(1),
  );
  return $items;
}

/**
 * Implements hook_form_alter().
 */
function osha_search_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'search_block_form') {
    // Overwrite the search page default url.
    // Unset the form elements - the search view needs just the search param.
    $form['#action'] = url('search/site');
    $form['#method'] = 'get';
    unset($form['#submit']);
    unset($form['form_build_id']);
    unset($form['form_id']);
  }
}

/*
 * NOT IMPLEMENTED
 * TODO Get this function done for CW-220
 */

function osha_search_autocomplete_callback($search = '*') {
  $search = check_plain($search);
  global $language;
  $response = drupal_http_request('http://localhost:8983/solr/osha/select?q=' .
    $search . '&wt=json&group=true&group.field=bundle&group.limit=3'
    . '&ss_search_api_language=' . $language->language);

  if ($response->code != 200) {
    var_dump($response->code);
    exit;
  }

  $data = json_decode($response->data);
  $total = $data->grouped->bundle->matches;
  $groups = array();
  $return = array();

  $showing_categ = 3;
  $showing_items = 3;
  $count_categ = 0;

  foreach ($data->grouped->bundle->groups as &$group) {
    if ($count_categ++ == $showing_categ) {
      break;
    }
    $count_items = 0;
    foreach ($group->doclist->docs as &$item) {
      if ($count_items++ == $showing_items) {
        // TODO append item show more link
        break;
      }

      $ac_item = array();
      $ac_item = array(
        "link" => url($item->path),
        "value" => "Factsheet 31 - Practical Advice for Workers on Tackling Work-related Stress and its Causes",
        "fields" => array(
          "title_field" => current($item->sm_title_field),
        ),
      );
      if ($count_items == 1) {
        $ac_item["group"] = array(
          "group_id" => $item->bundle,
          "group_name" => $item->bundle_name,
        );
      }
      $return[] = $ac_item;
    }
  }
  print_r(json_encode($return));
  exit;
}

/**
 * Implements hook_form_views_exposed_form_alter().
 */
function osha_search_form_views_exposed_form_alter(&$form, &$form_state) {
  // Set default language current language.
  if (!empty($form['search_api_language'])) {
    global $language;
    if ($language->language != LANGUAGE_NONE) {
      $form['search_api_language']['#default_value'] = $language->language;
    }
  }
}

/**
 * Implements hook_post_features_enable_feature().
 */
function osha_search_post_features_enable_feature($component) {
  features_revert_module('osha_search');
}

/**
 * Implements hook_facetapi_widgets().
 *
 * Add selector widget for facets.
 */
function osha_search_facetapi_widgets() {
  return array(
    'facetapi_dropdown' => array(
      'handler' => array(
        'label' => t('Dropdown'),
        'class' => 'OshaSearchWidgetDropdown',
        'query types' => array('date'),
      ),
    ),
  );
}

/**
 * Widget that renders facets as a dropdown.
 *
 * This widget renders facets in the same way as FacetapiWidgetLinks but uses
 * JavaScript to transform the links drowpdown.
 *
 * Inspired from checkbox FacetapiWidgetCheckboxLinks
 */
class OshaSearchWidgetDropdown extends FacetapiWidgetLinks {

  /**
   * Overrides FacetapiWidgetLinks::init().
   *
   * Adds additional JavaScript settings and CSS.
   */
  public function init() {
    parent::init();
    $this->jsSettings['makeDropdown'] = 1;
    drupal_add_js(drupal_get_path('module', 'osha_search') . '/facet.js', array('weight' => 20));
    drupal_add_js(array('osha_search' => array('any_option' => t('- Any -'))), 'setting');
    drupal_add_css(drupal_get_path('module', 'facetapi') . '/facetapi.css');
  }

  /**
   * Overrides FacetapiWidgetLinks::getItemClasses().
   *
   * Sets the base class for checkbox facet items.
   */
  public function getItemClasses() {
    return array('facetapi-dropdown');
  }
}
