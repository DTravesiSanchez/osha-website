<?php

/**
 * Implements hook_install().
 */
function osha_workflow_install() {
// Remove exiting transitions.
  module_load_include('inc', 'workbench_moderation', 'workbench_moderation.admin');
  $form_state = array();
  $form = workbench_moderation_admin_transitions_form(array(), $form_state);
  unset($form['transitions']['#tree']);
  foreach ($form['transitions'] as $transition) {
    $form_state['values']['transitions'][] = array(
      'transition' => (object) $transition,
      'delete' => 1,
    );
  }
  drupal_form_submit('workbench_moderation_admin_transitions_form', $form_state);

  workbench_access_reset_tree();
  // Update the form acces settings auto assign checkbox.
  $form_state = array();
  drupal_build_form('workbench_access_settings_form', $form_state);
  $form_state['values'] = array(
    'workbench_access' => 'menu',
    'workbench_access_menu' => array(
      'main-menu' => 'main-menu',
    ),
    'workbench_access_menu_limit' => 1,
    'workbench_access_auto_assign' => 1,
  );
  drupal_form_submit('workbench_access_settings_form', $form_state);

  // Assign administrator to main menu sections.
  if ($role = user_role_load_by_name('administrator')) {
    workbench_access_role_section_save($role->rid, 'main-menu', 'menu');
  }
  else {
    // @todo: Throw some error?
  }

  // @todo Submit the form instead of using direct function.
  /*$form_state = array();
  $form_state['build_info']['args'] = array('menu', 'main-menu');
  drupal_build_form('workbench_access_role_form', $form_state);
  $form_state['values']['roles'] = array(3 => 3);
  drupal_form_submit('workbench_access_role_form', $form_state);*/
}

/**
 * Implements hook_update_n().
 */
function osha_workflow_update_7001() {
  module_load_include('module', 'osha_workflow');
  osha_workflow_create_roles();
  if ($role = user_role_load_by_name('administrator')) {
    user_role_revoke_permissions($role->rid, array('use workbench_moderation needs review tab'));
  }
}

/**
 * Implements hook_schema().
 */
function osha_workflow_schema() {
  $schema = array();
  $schema['osha_workflow_node_project_managers'] = array(
    'description' => 'Base table for the content review workflow',
    'fields' => array(
      'npmid' => array(
        'description' => 'Identifier',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Node under review',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Project manager account',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('npmid'),
    'indexes' => array(
      'osha_workflow_review_uid' => array('uid'),
    ),
    'foreign keys' => array(
      'uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'nid' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
    ),
  );

  $schema['osha_workflow_node_approval'] = array(
    'description' => 'Base table for node approval entity',
    'fields' => array(
      'apid' => array(
        'description' => 'Identifier for the approved item',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Moderated node ID (nid)',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Account doing the moderation',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'approved' => array(
        'description' => 'NULL not voted, approved or rejected',
        'type' => 'varchar',
        'length' => 64,
        'default' => NULL,
        'not null' => FALSE,
      ),
      'next' => array(
        'description' => '0 - no, 1 - yes',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'weight' => array(
        'description' => 'Order of moderation, lowest first',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'message' => array(
        'description' => 'Message left by the moderator',
        'type' => 'text',
        'size' => 'medium',
      ),
    ),
    'primary key' => array('apid'),
    'indexes' => array(
      'moderator_uid' => array('uid'),
    ),
    'unique keys' => array(
      'moderation_unique' => array('nid', 'uid'),
    ),
    'foreign keys' => array(
      'uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'nid' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
    ),
  );
  return $schema;
}
