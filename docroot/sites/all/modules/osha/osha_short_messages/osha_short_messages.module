<?php
/**
 * Short Messages
 * Generate Html from node content to be used in Vocus system
 * The generated Html is composed of a fix header and footer and
 * the node's body
 */

/**
 * Implements hook_menu()
 */
function osha_short_messages_menu(){
  $items = array();

  //add a tab in the node edit page
  $items['node/%node/short_message'] = array(
    'title' => 'Short Message',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('osha_short_messages_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_admin_paths().
 */
function osha_short_messages_admin_paths() {
  if (variable_get('node_admin_theme')) {
    $paths = array(
      'node/*/short_message' => TRUE,
    );
    return $paths;
  }
}

/**
 * Page callback: Form
 * @see osha_short_messages_menu()
 */
function osha_short_messages_form($form, &$form_state){
  //get the node object
  $node = osha_short_messages_node();

  //get the list of languages
  $languages = language_list('enabled');
  usort($languages[1], function ($a, $b) {
    return strcmp($a->name, $b->name);
  });

  $languages = $languages[1];

  // Get available languages.
  $available_lang = array_keys($node->translations->data);
  // Hide some languages.
  $hided_lng = array('ru', 'tr');
  $available_lang = array_diff($available_lang, $hided_lng);

  foreach ($languages as $key => $language) {
    if (!in_array($language->language, $available_lang)) {
      unset($languages[$key]);
    }
  }

  //compose header, content and footer
  $header = theme('short_messages_header', array(
    'languages' => $languages,
    'node_title' => $node->title,
    'node_id' => $node->nid,
  ));
  $footer = theme('short_messages_footer');

  //get a content type display mode
  $display = node_view($node, 'default', 'en');
  if(isset($display['field_publication_date']))
    $display['field_publication_date'][0]['#markup'] = alter_published_date($node);

  //remove links
  $display['links'] = FALSE;
  $display['#contextual_links'] = FALSE;

  //remove all contextual links
  removeArrayKey($display, array('contextual_links'));

  //remove some fields from default view
  $display['title_field'] = FALSE;

  $body = theme('short_messages_body', array(
    'body_content' => drupal_render($display),
  ));

  //content textarea
  $form['short_messages_content'] = array(
    '#type' => 'text_format',
    '#rows' => '20',
    '#format' => 'full_html',
    '#title' => t('Content'),
    '#default_value' => $header.$body.$footer,
  );

  //display message button
  $form['short_messages_popup'] = array(
    '#type' => 'button',
    '#value' => t('Display message'),
    '#attributes' => array(
      'onclick' => 'displayDialog(); return false;',
    ),
  );

  //copy to clipboard button
  $form['short_messages_clipboard'] = array(
    '#type' => 'button',
    '#value' => t('Copy Html to Clipboard'),
    '#attributes' => array(
      'onclick' => 'return false;',
    ),
  );

  //the container for preview content
  $form['short_messages_markup'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id="preview_message" style="display: none"><iframe id="preview_content" frameborder="0" height="100%" width="100%"></iframe>',
    '#suffix' => '</div>',
  );

  $form['#attached']['js'][] = drupal_get_path('module', 'osha_short_messages') . '/includes/js/popup.js';
  $form['#attached']['js'][] = drupal_get_path('module', 'osha_short_messages') . '/includes/js/copytoclipboard.js';
  $form['#attached']['js'][] = libraries_get_path('zeroclipboard') . '/ZeroClipboard.js';

  return $form;
}

/**
 * Implements hook_theme().
 */
function osha_short_messages_theme() {
  $theme = array();
  $path = drupal_get_path('module', 'osha_short_messages');

  $theme['short_messages_header'] = array(
    'template' => 'short_messages_header',
    'variables' => array(
      'languages' => NULL,
      'newsletter_title' => NULL,
      'newsletter_id' => NULL,
      'newsletter_date' => NULL
    ),
    'path' => $path . '/templates'
  );

  $theme['short_messages_body'] = array(
    'template' => 'short_messages_body',
    'variables' => array(
      'body_content' => NULL
    ),
    'path' => $path . '/templates',
  );

  $theme['short_messages_footer'] = array(
    'template' => 'short_messages_footer',
    'path' => $path . '/templates'
  );

  return $theme;
}

/**
 * Get the node content
 */
function osha_short_messages_node(){
  $node = menu_get_object();
  return $node;
}

/**
 * Remove or set to FALSE one or more array keys
 * @param $array
 * @param $keys
 */
function removeArrayKey(&$array, $keys) {
  foreach ($array as $key => &$value) {
    if (is_array($value)) {
      removeArrayKey($value, $keys);
    } else {
      if (in_array($key, $keys)){
        $array[$key] = FALSE;
      }
    }
  }
}

/**
 * Alter published date
 * @param $node
 * @return string
 */
function alter_published_date($node) {
  //$output = format_date(strtotime($node->field_publication_date[LANGUAGE_NONE][0]['value']), 'short_date_eu');
  $output = '';

  if ($node->type == 'press_release') {
    if (!empty($node->field_pr_embargo_date)) {
      $embargo_date = strtotime($node->field_pr_embargo_date[LANGUAGE_NONE][0]['value']);
      $str_embargo_date = format_date($embargo_date, 'short_date_eu');
      if ($embargo_date - strtotime('now') > 0) {
        $message = t('HOLD ON FOR PRESS RELEASE UNTIL').' '.$str_embargo_date;
      }
    }
    if (!isset($message)) {
      $publication_date = strtotime($node->field_publication_date[LANGUAGE_NONE][0]['value']);
      $str_publication_date = format_date($publication_date, 'short_date_eu');
      $message = t('FOR IMMEDIATE RELEASE').' - '.$str_publication_date;
    }
    $output = '<span class="press-release-date">'.$message.'</span>';
  }

  return $output;
}